#!/usr/bin/env sh
":"; //# comment; exec /usr/bin/env node --input-type=module - "$@" < "$0"

import { Command } from "commander";
import { readFileSync, writeFileSync } from "fs";
import { basename, extname } from "path";
import openEditor from "./src/open-editor-mod.mjs";
import createJsonc from "./src/create-jsonc.js";
import createJom from "./src/create-jom.js";
import generatePreamble from "./src/generate-preamble.js";

const program = new Command();

const DEFAULT_FILE = "test-package.json";
const DEFAULT_JOM_FILE = "test-package.jom";

program
  .name("jom")
  .description("CLI to use commented json file with externalized comments")
  .version("0.1.0");

program
  .command("edit [jomFile]")
  .description("edit a json file with its corresponding comments file")
  .action(async (jomFile) => {
    jomFile = jomFile || DEFAULT_JOM_FILE;
    console.log(`starting edit process of ${jomFile}`);
    const jomContent = readFileSync(jomFile, { encoding: "utf-8" });
    const fileRefMatch = jomContent.match(/^\/\/\s*fileRef\:\s*(.*)\s*$/m);
    const jsonFilePath = fileRefMatch[1];
    console.log(`found fileRef '${jsonFilePath}'`);
    const jsoncFilePath = await createJsonc(jsonFilePath, jomFile);

    await openEditor(
      [
        {
          file: jsoncFilePath,
        },
      ],
      { wait: true }
    );

    createJom(jsonFilePath, jomFile, jsoncFilePath);
  });

program
  .command("init [file]")
  .description("edit a json file with its corresponding comments file")
  .action((file) => {
    file = file || DEFAULT_FILE;
    const jsonBasename = basename(file, extname(file));
    const jomFileName = `${jsonBasename}.jom`;

    console.log(`initializing a basic .jom file: ${jomFileName}`);

    const preamble = `${generatePreamble(file)}{}`;
    writeFileSync(jomFileName, preamble);
  });

program.parse();
